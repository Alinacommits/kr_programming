The spread operator (...) and the rest operator (...) in JavaScript use the same syntax (three dots), 
but they serve different purposes depending on the context in which they are used. Here are the key differences along with examples:

The spread operator is used to expand elements of an iterable (like an array or string) or properties of an object.
Example#1:
const numbers = [1, 2, 3, 4];
function sum(a, b, c, d) {
    return a + b + c + d;
}
console.log(sum(...numbers)); // Output: 10

Example#2:
const obj1 = { a: 1, b: 2 };
const obj2 = { c: 3, d: 4 };
const combinedObj = { ...obj1, ...obj2 };
console.log(combinedObj); // Output: { a: 1, b: 2, c: 3, d: 4 }


The rest operator is used to collect multiple elements into a single array or object. It is typically used in function parameters to handle an arbitrary number of arguments.
Example#1:
function sum(...args) {
    return args.reduce((acc, curr) => acc + curr, 0);
}
console.log(sum(1, 2, 3, 4)); // Output: 10

Example#2:
const { a, b, ...rest } = { a: 1, b: 2, c: 3, d: 4 };
console.log(a); // Output: 1
console.log(b); // Output: 2
console.log(rest); // Output: { c: 3, d: 4 }

